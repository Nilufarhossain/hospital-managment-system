/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagementsystem;

import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
public class Doctor extends javax.swing.JFrame {

    String DoctorGender;
    /**
     * Creates new form Doctor
     */
    public Doctor() {
        initComponents();
         show_user();
    }
    
    public ArrayList<User>userList(){
   ArrayList<User>usersList= new ArrayList<>(); 
   
    try {
           
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           Connection conn = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=HospitalManagement;selectMethod=cursor", "sa", "123456");
            
           System.out.println("DATABASE NAME IS:" + conn.getMetaData().getDatabaseProductName());
              String query1  = "Select * from Doctor";
              Statement st= conn.createStatement();
              ResultSet rs = st.executeQuery(query1);
                 
            User user;
            while(rs.next()){
                user=new User(rs.getInt("DoctorID"), rs.getString("DoctorName"),rs.getString("DoctorEmail"), rs.getString("DoctorPassword"),  rs.getString("DoctorContact"),rs.getString("Specialist"), rs.getString("DoctorGender"),rs.getString("DoctorAddress"));
                usersList.add(user);
            }
         }
    catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
        }
    return usersList;
  }
    
     public void show_user(){
        ArrayList<User> list = userList();
        DefaultTableModel model = (DefaultTableModel)tabletable.getModel();
        Object[] row = new Object[8];
        for(int i=0;i<list.size();i++){
            row[0]=list.get(i).getDoctorID();
            row[1]=list.get(i).getDoctorName();
            row[2]=list.get(i).getDoctorEmail();
            row[3]=list.get(i).getDoctorPassword();
            row[4]=list.get(i).getDoctorContact();
            row[5]=list.get(i).getSpecialist();
            row[6]=list.get(i).getDoctorGender();
            row[7]=list.get(i).getDoctorAddress();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DoctorName = new javax.swing.JTextField();
        DoctorEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        DoctorPassword = new javax.swing.JTextField();
        DoctorContact = new javax.swing.JTextField();
        Specialist = new javax.swing.JTextField();
        DoctorAddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Male = new javax.swing.JRadioButton();
        Female = new javax.swing.JRadioButton();
        insert = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabletable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setText("Name:");

        jLabel2.setText("Email:");

        jLabel3.setText("Password:");

        jLabel4.setText("Phone:");

        jLabel5.setText("Specialist:");

        jLabel6.setText("Gender:");

        jLabel7.setText("Address:");

        buttonGroup1.add(Male);
        Male.setText("Male");

        buttonGroup1.add(Female);
        Female.setText("Female");

        insert.setText("Save");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tabletable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DoctorId", "DoctorName", "DoctorEmail", "DoctorPassWord", "DoctorContact", "Specialist", "DoctorGender", "DoctorAddress"
            }
        ));
        tabletable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabletableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabletable);

        jLabel8.setFont(new java.awt.Font("Elephant", 2, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Doctor Information");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(insert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DoctorName)
                    .addComponent(DoctorEmail)
                    .addComponent(DoctorPassword)
                    .addComponent(DoctorContact)
                    .addComponent(Specialist)
                    .addComponent(DoctorAddress)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Male, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Female, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton4)
                        .addComponent(Update)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 959, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(311, 311, 311))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(539, 539, 539))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(DoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DoctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DoctorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DoctorContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Specialist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(Male)
                            .addComponent(Female))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DoctorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insert)
                            .addComponent(Update)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delete)
                            .addComponent(jButton4))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
     try {
           
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           Connection conn = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=HospitalManagement;selectMethod=cursor", "sa", "123456");
            
           System.out.println("DATABASE NAME IS:" + conn.getMetaData().getDatabaseProductName());
            String query="insert into Doctor(DoctorName,DoctorEmail,Doctorpassword,DoctorContact,Specialist,DoctorGender,DoctorAddress)values(?,?,?,?,?,?,?)";
            PreparedStatement pst = conn.prepareStatement(query);
           
            pst.setString(1,DoctorName.getText());
            pst.setString(2,DoctorEmail.getText());
            pst.setString(3,DoctorPassword.getText());
            pst.setString(4,DoctorContact.getText());
            pst.setString(5,Specialist.getText());
            if(Male.isSelected())
            {
                DoctorGender="Male";
            }
            else if(Female.isSelected())
            {
                DoctorGender="Female";
            }
            pst.setString(6,DoctorGender);
            pst.setString(7,DoctorAddress.getText());
            pst.executeUpdate();
         
           DefaultTableModel model = (DefaultTableModel)tabletable.getModel();
           model.setRowCount(0);
           show_user();
            JOptionPane.showMessageDialog(null, "Inserted Sucessfully!");
        

    } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
        }
        
        
    }//GEN-LAST:event_insertActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        DoctorName.setText("");
        DoctorEmail.setText("");
        DoctorPassword.setText("");
        DoctorContact.setText("");
        Specialist.setText("");
        buttonGroup1.clearSelection();
        DoctorAddress.setText("");        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
       try {
           
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           Connection conn = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=HospitalManagement;selectMethod=cursor", "sa", "123456");
            
           //System.out.println("DATABASE NAME IS:" + conn.getMetaData().getDatabaseProductName());
             int row= tabletable.getSelectedRow();
            String value=(tabletable.getModel().getValueAt(row, 0).toString());  
            String query = "UPDATE Doctor SET DoctorName=?,DoctorEmail=?, DoctorContact=?, DoctorPassword=?,  Specialist=?,DoctorGender=?,DoctorAddress=? where DoctorID="+value;

            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, DoctorName.getText());
            pst.setString(2, DoctorEmail.getText());
            pst.setString(3, DoctorContact.getText());
            pst.setString(4, DoctorPassword.getText());
            pst.setString(5, Specialist.getText());
            
            if(Male.isSelected())
            {
                DoctorGender="Male";
            }
            else if(Female.isSelected())
            {
                DoctorGender="Female";
            }
            pst.setString(6, DoctorGender);
            pst.setString(7, DoctorAddress.getText());
            pst.executeUpdate();
           
            DefaultTableModel  model = (DefaultTableModel)tabletable.getModel();
            model.setRowCount(0);
            show_user();
            
       }
 catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
        }// TODO add your handl
    }//GEN-LAST:event_UpdateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        try {
           
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           Connection conn = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=HospitalMangement;selectMethod=cursor", "sa", "123456");
                      System.out.println("DATABASE NAME IS:" + conn.getMetaData().getDatabaseProductName());
                                        
            int row = tabletable.getSelectedRow();
            String value = tabletable.getModel().getValueAt(row,0).toString();
            
            
            String query = "Delete from Doctor where DoctorID="+value;
            PreparedStatement pst = conn.prepareStatement(query);
            pst.executeUpdate();
            
            DefaultTableModel  model = (DefaultTableModel)tabletable.getModel();
            model.setRowCount(0);
            show_user();
            JOptionPane.showMessageDialog(null,"Deleated Successfully.");
            
      
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
        }
            
    }//GEN-LAST:event_deleteActionPerformed

    private void tabletableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabletableMouseClicked

        // TODO add your handling code here:
        int i = tabletable.getSelectedRow();
        TableModel model =tabletable.getModel();
        DoctorName.setText(model.getValueAt(i, 1).toString());
        DoctorEmail.setText(model.getValueAt(i, 2).toString());
        DoctorPassword.setText(model.getValueAt(i, 3).toString());
        DoctorContact.setText(model.getValueAt(i, 4).toString());
        Specialist.setText(model.getValueAt(i, 5).toString());
       
        
        String gender =model.getValueAt(i, 6).toString();
        if(gender.equals("Male"))
        {
            Male.setSelected(true);
           
        }
        else {
            Female.setSelected(true);
            
        }
         DoctorAddress.setText(model.getValueAt(i, 7).toString());
       
       
        
    }//GEN-LAST:event_tabletableMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      new Home().setVisible(true);      // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DoctorAddress;
    private javax.swing.JTextField DoctorContact;
    private javax.swing.JTextField DoctorEmail;
    private javax.swing.JTextField DoctorName;
    private javax.swing.JTextField DoctorPassword;
    private javax.swing.JRadioButton Female;
    private javax.swing.JRadioButton Male;
    private javax.swing.JTextField Specialist;
    private javax.swing.JButton Update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton delete;
    private javax.swing.JButton insert;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabletable;
    // End of variables declaration//GEN-END:variables
}
